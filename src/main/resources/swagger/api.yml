openapi: 3.0.1
info:
  title: beatStream
  version: 0.0.1
servers:
  - url: 'http://localhost:8080/api'
    description: Development server
  - url: 'https://localhost:8080/api'
    description: Development server with TLS Profile
paths:
  /audio/upload:
    post:
      summary: ''
      operationId: uploadSongFile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
      tags:
        - music
      description: upload an music file into your account
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioUpload'
        description: ''
    parameters: []
  /playlist:
    get:
      summary: getPlaylists
      tags:
        - playlist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/playlist'
      operationId: getPlaylists
    post:
      summary: createPlaylist
      operationId: createPlaylist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playlist'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playlist'
      tags:
        - playlist
  '/playlist/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: getPlaylist
      tags:
        - playlist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playlist'
      operationId: getPlaylist
    delete:
      summary: deletePlaylist
      operationId: deletePlaylist
      responses:
        '200':
          description: OK
      tags:
        - playlist
  '/track/play/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: playTrack
      tags:
        - track
      responses:
        '206':
          description: Partial Content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      operationId: playTrack
      parameters:
        - schema:
            type: string
          in: header
          name: rangeHeader
          description: rangeHeader
  /audio/plugins/download:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      operationId: downloadAudio
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: refid
          required: true
        - schema:
            type: string
          in: query
          name: refType
          required: true
        - schema:
            type: string
          in: query
          name: playlistId
          required: true
components:
  responses:
    Problem:
      description: error occurred - see status code and problem object for more information.
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              type:
                type: string
                format: uri
                description: |
                  An absolute URI that identifies the problem type.  When dereferenced,
                  it SHOULD provide human-readable documentation for the problem type
                  (e.g., using HTML).
                default: 'about:blank'
                example: 'https://www.jhipster.tech/problem/problem-with-message'
              title:
                type: string
                description: |
                  A short, summary of the problem type. Written in english and readable
                  for engineers (usually not suited for non technical stakeholders and
                  not localized); example: Service Unavailable
              status:
                type: integer
                format: int32
                description: |
                  The HTTP status code generated by the origin server for this occurrence
                  of the problem.
                minimum: 100
                maximum: 600
                exclusiveMaximum: true
                example: 503
              detail:
                type: string
                description: |
                  A human readable explanation specific to this occurrence of the
                  problem.
                example: Connection to database timed out
              instance:
                type: string
                format: uri
                description: |
                  An absolute URI that identifies the specific occurrence of the problem.
                  It may or may not yield further information if dereferenced.
  securitySchemes:
    jwt:
      type: http
      description: JWT Authentication
      scheme: bearer
      bearerFormat: JWT
    basic:
      type: http
      description: Basic Authentication
      scheme: basic
  schemas:
    AudioUpload:
      title: AudioUpload
      x-stoplight:
        id: mep03nonbmq60
      type: object
      properties:
        title:
          type: string
          x-stoplight:
            id: fn95bjtsgzawb
        audioFile:
          type: string
          x-stoplight:
            id: gl12h67pw1rkv
          format: binary
        cover:
          type: string
          x-stoplight:
            id: juua06kisx9x4
          format: binary
        playlistId:
          type: string
          x-stoplight:
            id: weuiu21xh20wo
    Track:
      title: Track
      x-stoplight:
        id: 4ponn7x7fcud3
      type: object
      properties:
        id:
          type: string
        title:
          type: string
          x-stoplight:
            id: 4o0lrv3dhn5o6
        duration:
          type: number
          x-stoplight:
            id: s665xbu3q8ri8
        playlists:
          type: array
          x-stoplight:
            id: u10kn6taajndd
          items:
            x-stoplight:
              id: yxxzgoxli7fnc
            type: string
        playCount:
          type: number
          x-stoplight:
            id: fzfizssqe192b
    playlist:
      title: playlist
      x-stoplight:
        id: 0k89ztr66qhm8
      type: object
      properties:
        id:
          type: string
          x-stoplight:
            id: pmrjd7s2t5ek6
        title:
          type: string
          x-stoplight:
            id: whk3qmjay7nlh
        desc:
          type: string
          x-stoplight:
            id: cpfjzr2k9xc4b
        tracks:
          type: array
          x-stoplight:
            id: bx67u4ruppnj7
          items:
            $ref: '#/components/schemas/Track'
    Status:
      title: Status
      x-stoplight:
        id: vfbw2e2tweage
      type: object
      properties:
        status:
          type: string
          x-stoplight:
            id: jcyhyzh94h5i1
security:
  - jwt: []
  - basic: []
