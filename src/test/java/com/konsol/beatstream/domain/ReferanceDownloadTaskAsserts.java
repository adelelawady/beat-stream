package com.konsol.beatstream.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReferanceDownloadTaskAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferanceDownloadTaskAllPropertiesEquals(ReferanceDownloadTask expected, ReferanceDownloadTask actual) {
        assertReferanceDownloadTaskAutoGeneratedPropertiesEquals(expected, actual);
        assertReferanceDownloadTaskAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferanceDownloadTaskAllUpdatablePropertiesEquals(
        ReferanceDownloadTask expected,
        ReferanceDownloadTask actual
    ) {
        assertReferanceDownloadTaskUpdatableFieldsEquals(expected, actual);
        assertReferanceDownloadTaskUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferanceDownloadTaskAutoGeneratedPropertiesEquals(
        ReferanceDownloadTask expected,
        ReferanceDownloadTask actual
    ) {
        assertThat(expected)
            .as("Verify ReferanceDownloadTask auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferanceDownloadTaskUpdatableFieldsEquals(ReferanceDownloadTask expected, ReferanceDownloadTask actual) {
        assertThat(expected)
            .as("Verify ReferanceDownloadTask relevant properties")
            .satisfies(e -> assertThat(e.getReferanceId()).as("check referanceId").isEqualTo(actual.getReferanceId()))
            .satisfies(e -> assertThat(e.getReferanceType()).as("check referanceType").isEqualTo(actual.getReferanceType()))
            .satisfies(e -> assertThat(e.getReferanceTrackId()).as("check referanceTrackId").isEqualTo(actual.getReferanceTrackId()))
            .satisfies(e -> assertThat(e.getReferanceStatus()).as("check referanceStatus").isEqualTo(actual.getReferanceStatus()))
            .satisfies(e ->
                assertThat(e.getReferanceScheduleDate()).as("check referanceScheduleDate").isEqualTo(actual.getReferanceScheduleDate())
            )
            .satisfies(e -> assertThat(e.getReferanceLog()).as("check referanceLog").isEqualTo(actual.getReferanceLog()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferanceDownloadTaskUpdatableRelationshipsEquals(
        ReferanceDownloadTask expected,
        ReferanceDownloadTask actual
    ) {
        // empty method
    }
}
