package com.konsol.beatstream.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ListeningHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertListeningHistoryAllPropertiesEquals(ListeningHistory expected, ListeningHistory actual) {
        assertListeningHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertListeningHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertListeningHistoryAllUpdatablePropertiesEquals(ListeningHistory expected, ListeningHistory actual) {
        assertListeningHistoryUpdatableFieldsEquals(expected, actual);
        assertListeningHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertListeningHistoryAutoGeneratedPropertiesEquals(ListeningHistory expected, ListeningHistory actual) {
        assertThat(expected)
            .as("Verify ListeningHistory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertListeningHistoryUpdatableFieldsEquals(ListeningHistory expected, ListeningHistory actual) {
        assertThat(expected)
            .as("Verify ListeningHistory relevant properties")
            .satisfies(e -> assertThat(e.getTimestamp()).as("check timestamp").isEqualTo(actual.getTimestamp()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertListeningHistoryUpdatableRelationshipsEquals(ListeningHistory expected, ListeningHistory actual) {
        assertThat(expected)
            .as("Verify ListeningHistory relationships")
            .satisfies(e -> assertThat(e.getTrack()).as("check track").isEqualTo(actual.getTrack()));
    }
}
